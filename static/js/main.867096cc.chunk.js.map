{"version":3,"sources":["Component/ContactForm/ContactForm.module.css","Component/ContactList/ContactList.module.css","Component/Filter/Filter.module.css","Component/ElementContactList/ElementContactList.module.css","Component/Container/Container.module.css","Component/Container/Container.js","redux/phonebook/phonebook-action.js","redux/phonebook/phonebook-operations.js","Component/ContactForm/ContactForm.js","redux/phonebook/phonebook-selectors.js","Component/Filter/Filter.js","Component/ElementContactList/ElementContactList.js","Component/ContactList/ContactList.js","App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js"],"names":["module","exports","Container","children","className","styles","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","ContactForm","state","name","number","nameInputId","uuidv4","numberInputId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","alert","this","contacts_form","htmlFor","label","type","pattern","title","required","onChange","id","input","form_button","Component","defaultProps","connect","dispatch","contact","post","then","data","catch","error","addContact","getLoading","contacts","loading","getFilter","filter","getVisibleContacts","createSelector","items","normalizedFilter","toLowerCase","includes","target","ElementContactList","contact_name","contact_number","ContactList","onfetchContacts","isLoadingContacts","contact_list","map","contact_item","onClick","item_button","delete","deleteContact","a","get","App","React","createReducer","_","payload","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.867096cc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts_form\":\"ContactForm_contacts_form__3rwVh\",\"form_button\":\"ContactForm_form_button__XIKai\",\"label\":\"ContactForm_label__kPGNc\",\"input\":\"ContactForm_input__1gULE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stat_list\":\"ContactList_stat_list__3bDt0\",\"item\":\"ContactList_item__28Ao6\",\"contact_list\":\"ContactList_contact_list__3raoh\",\"contact_item\":\"ContactList_contact_item__36cFt\",\"item_button\":\"ContactList_item_button__33p0B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend_list\":\"Filter_friend_list__WcZbJ\",\"item\":\"Filter_item__1mttl\",\"avatar\":\"Filter_avatar__4Ph49\",\"name\":\"Filter_name__3TLjy\",\"status_isOnline\":\"Filter_status_isOnline__3uerV\",\"status_isOffline\":\"Filter_status_isOffline__WEsIC\",\"label\":\"Filter_label__3hROY\",\"input\":\"Filter_input__3MkT7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_name\":\"ElementContactList_contact_name__3IFuo\",\"contact_number\":\"ElementContactList_contact_number__1mbb8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__14iBF\"};","import React from \"react\";\nimport styles from \"./Container.module.css\";\n\nconst Container = ({ children }) => (\n  <div className={styles.Container}>{children}</div>\n);\n\nexport default Container;\n","// import { v4 as uuidv4 } from 'uuid';\nimport { createAction } from \"@reduxjs/toolkit\";\n\nexport const fetchContactRequest = createAction(\"contacts/fetchContactRequest\");\nexport const fetchContactSuccess = createAction(\"contacts/fetchContactSuccess\");\nexport const fetchContactError = createAction(\"contacts/fetchContactError\");\n\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\nexport const addContactSuccess = createAction(\"contacts/addContactSuccess\");\nexport const addContactError = createAction(\"contacts/addContactError\");\n\nexport const deleteContactRequest = createAction(\n  \"contacts/deleteContactRequest\"\n);\nexport const deleteContactSuccess = createAction(\n  \"contacts/deleteContactSuccess\"\n);\nexport const deleteContactError = createAction(\"contacts/deleteContactError\");\n\nexport const changeFilter = createAction(\"contacts/changeFilter\");\n","import axios from \"axios\";\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n} from \"./phonebook-action\";\n\naxios.defaults.baseURL = \"http://localhost:4040\";\n// ---------------------------async-await-------------------------\nexport const fetchContacts = () => async (dispatch) => {\n  dispatch(fetchContactRequest());\n  try {\n    const { data } = await axios.get(\"/contacts\");\n    dispatch(fetchContactSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactError(error));\n  }\n};\n// -----------------then-cath----------------------------------\n// export const fetchContacts = () => dispatch => {\n//   dispatch(fetchContactRequest());\n\n//   axios\n//     .get('/contacts')\n//     .then(({ data }) => dispatch(fetchContactSuccess(data)))\n//     .catch(error => dispatch(fetchContactError(error)));\n// };\n\nexport const addContact = (name, number) => (dispatch) => {\n  const contact = {\n    name,\n    number,\n  };\n  dispatch(addContactRequest());\n  axios\n    .post(\"/contacts\", contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch((error) => dispatch(addContactError(error)));\n};\n\nexport const deleteContact = (id) => (dispatch) => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(deleteContactSuccess(id)))\n    .catch((error) => dispatch(deleteContactError(error)));\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addContact } from \"../../redux/phonebook/phonebook-operations\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactForm.module.css\";\n\nclass ContactForm extends Component {\n  static defaultProps = {\n    name: \"\",\n    number: \"\",\n  };\n\n  static propTypes = {\n    name: PropTypes.string,\n    number: PropTypes.string,\n  };\n\n  state = {\n    name: \"\",\n    number: \"\",\n    // name: this.props.name,\n    // number: this.props.number\n  };\n\n  nameInputId = uuidv4();\n  numberInputId = uuidv4();\n\n  /** Отвечает за обновление состояния*/\n  handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n  /** Вызывается при отправке формы */\n  // Проп который передается форме для вызова при сабмите\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    // this.props.onSubmit(name, number);\n    // this.reset();\n    if (name !== \"\" && number !== \"\") {\n      this.props.onSubmit(name, number);\n      this.reset();\n      return;\n    }\n    alert(\"Please fill empty fields\");\n  };\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <>\n        <form onSubmit={this.handleSubmit} className={styles.contacts_form}>\n          <div>\n            <label htmlFor={this.nameInputId} className={styles.label}>\n              Name\n              <input\n                type=\"text\"\n                value={name}\n                name=\"name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                required\n                onChange={this.handleChange}\n                id={this.nameInputId}\n                className={styles.input}\n              />\n            </label>\n          </div>\n          <div>\n            <label htmlFor={this.numberInputId} className={styles.label}>\n              Number\n              <input\n                type=\"tel\"\n                value={number}\n                name=\"number\"\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                required\n                onChange={this.handleChange}\n                id={this.numberInputId}\n                className={styles.input}\n              />\n            </label>\n          </div>\n\n          <button type=\"submit\" className={styles.form_button}>\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (name, number) => dispatch(addContact(name, number)),\n});\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const getLoading = (state) => state.contacts.loading;\n\nexport const getFilter = (state) => state.contacts.filter;\n\nexport const getAllContacts = (state) => state.contacts.items;\n\n// export const getVisibleContacts = state => {\n//   const contacts = getAllContacts(state);\n//   const filter = getFilter(state);\n//   const normalizedFilter = filter.toLowerCase();\n\n//   return contacts.filter(contact =>\n//     contact.name.toLowerCase().includes(normalizedFilter),\n//   );\n// };\n//--------используем мемоизацию:\nexport const getVisibleContacts = createSelector(\n  [getAllContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","// import PropTypes from 'prop-types';\nimport React from \"react\";\nimport styles from \"./Filter.module.css\";\nimport { connect } from \"react-redux\";\nimport { changeFilter } from \"../../redux/phonebook/phonebook-action\";\nimport { getFilter } from \"../../redux/phonebook/phonebook-selectors\";\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label className={styles.label}>\n      Find contact by name\n      <input\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n        className={styles.input}\n      />\n    </label>\n  );\n};\n// Filter.propTypes = {\n//   value: PropTypes.string.isRequired,\n//   onChange: PropTypes.func.isRequired,\n// };\n\nconst mapStateToProps = (state) => ({\n  value: getFilter(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChange: (e) => dispatch(changeFilter(e.target.value)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"../ElementContactList/ElementContactList.module.css\";\n\nconst ElementContactList = ({ name, number }) => {\n  return (\n    <>\n      <span className={styles.contact_name}>{name}: </span>\n      <span className={styles.contact_number}>{number}</span>\n    </>\n  );\n};\n\nElementContactList.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n\nElementContactList.defaultProps = {\n  name: \"Hello World\",\n  number: 123456789,\n};\nexport default ElementContactList;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { deleteContact } from \"../../redux/phonebook/phonebook-operations\";\nimport ElementContactList from \"../ElementContactList/ElementContactList\";\nimport styles from \"./ContactList.module.css\";\nimport { fetchContacts } from \"../../redux/phonebook/phonebook-operations\";\nimport {\n  getLoading,\n  getVisibleContacts,\n} from \"../../redux/phonebook/phonebook-selectors\";\n\nclass ContactList extends Component {\n  static propTypes = {\n    onFetchContacts: PropTypes.func,\n    contacts: PropTypes.array.isRequired,\n    onClick: PropTypes.func.isRequired,\n  };\n\n  componentDidMount() {\n    this.props.onfetchContacts();\n  }\n\n  render() {\n    return (\n      <>\n        {this.props.isLoadingContacts && <h1>....Загружаем</h1>}\n\n        <ul className={styles.contact_list}>\n          {this.props.contacts.map(({ id, name, number }) => (\n            <li key={id} className={styles.contact_item}>\n              <ElementContactList name={name} number={number} />\n              <button\n                type=\"button\"\n                onClick={() => {\n                  this.props.onClick(id);\n                }}\n                className={styles.item_button}\n              >\n                Delete\n              </button>\n            </li>\n          ))}\n        </ul>\n      </>\n    );\n  }\n}\n//-------------перенесли в   phonebook-selectors\n// const getVisibleContacts = (contacts, filter) => {\n//   const normalizedFilter = filter.toLowerCase();\n\n//   return contacts.filter(contact =>\n//     contact.name.toLowerCase().includes(normalizedFilter),\n//   );\n// };\nconst mapStateToProps = (state) => ({\n  contacts: getVisibleContacts(state),\n  isLoadingContacts: getLoading(state),\n  //----------было:\n  // const mapStateToProps = ({ contacts: { items, filter, loading } }) => ({\n  //   contacts: getVisibleContacts(items, filter),\n  //   isLoadingContacts: loading,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onClick: (id) => dispatch(deleteContact(id)),\n  onfetchContacts: () => dispatch(fetchContacts()),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from \"react\";\nimport Container from \"./Component/Container/Container\";\nimport ContactForm from \"./Component/ContactForm/ContactForm\";\nimport Filter from \"./Component/Filter/Filter\";\nimport ContactList from \"./Component/ContactList/ContactList\";\n// import { fetchContacts } from './redux/phonebook/phonebook-operations';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Container>\n        <div>\n          <h1>Phonebook</h1>\n          <ContactForm />\n\n          <h2>Contacts</h2>\n          <Filter />\n\n          <ContactList />\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\n// import contacts from '../../json/contacts.json';\nimport {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n} from \"./phonebook-action\";\n\nconst items = createReducer([], {\n  [fetchContactSuccess]: (_, { payload }) => payload,\n  // [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [addContactSuccess]: (state, { payload }) => {\n    if (state.map((contact) => contact.name).includes(payload.name)) {\n      return alert(`${payload.name} is already exist`);\n    }\n    return [...state, payload];\n  },\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst loading = createReducer(false, {\n  // [fetchContacts.pending]: () => true,\n  // [fetchContacts.fulfilled]: () => false,\n  // [fetchContacts.rejected]: () => false,\n  [fetchContactRequest]: () => true,\n  [fetchContactSuccess]: () => false,\n  [fetchContactError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst filter = createReducer(\"\", {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport contactsReducer from \"./phonebook/phonebook-reducer\";\nimport logger from \"redux-logger\";\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\n// const rootReducer = combineReducers({\n//   contacts: persistReducer(persistConfig, rootReducer),\n// });\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\n// const persistor = persistStore(store);\n// export default { store, persistor };\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles.css\";\nimport \"modern-normalize/modern-normalize.css\";\nimport { BrowserRouter } from \"react-router-dom\";\n// import { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}